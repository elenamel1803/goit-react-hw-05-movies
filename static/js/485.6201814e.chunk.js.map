{"version":3,"file":"static/js/485.6201814e.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx","services/Notiflix.js","services/RequestApi.js","services/defaultImg.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MoviesGalleryList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 40px;\n  justify-content: center;\n  max-width: 1200px;\n  margin: 28px auto;\n`;\n\nexport const MovieItem = styled.li`\n  border-radius: 4px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  height: 350px;\n  width: 200px;\n\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  height: 300px;\n  justify-content: space-between;\n`;\n\nexport const Img = styled.img`\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n  max-width: 200px;\n  min-height: 300px;\n  object-fit: cover;\n  object-position: center;\n`;\n\nexport const Text = styled.p`\n  padding: 4px;\n  font-size: 18px;\n  text-align: center;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { defaultImg } from 'services/defaultImg';\nimport {\n  Img,\n  MovieItem,\n  MovieLink,\n  MoviesGalleryList,\n  Text,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  const truncateText = (text, maxLength) => {\n    return text.length > maxLength ? text.slice(0, maxLength) + '...' : text;\n  };\n\n  return (\n    <MoviesGalleryList>\n      {movies.map(({ id, title, poster_path }) => (\n        <MovieItem key={id}>\n          <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n            <Img\n              src={\n                poster_path && poster_path.length > 0\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : defaultImg\n              }\n              alt={title}\n              width=\"200\"\n            />\n            <Text>{truncateText(title, 30)}</Text>\n          </MovieLink>\n        </MovieItem>\n      ))}\n    </MoviesGalleryList>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  text-align: center;\n  margin-bottom: 24px;\n`;\n","import Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { errorMessage } from 'services/Notiflix';\nimport { fetchTrendingMoviesApi } from 'services/RequestApi';\nimport { Title } from './Home.styled';\n\nconst Home = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchTrendingMoviesApi();\n        setMovies(data);\n      } catch (error) {\n        errorMessage(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <Title>Trending today</Title>\n          <MoviesList movies={movies} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import Notiflix from 'notiflix';\n\nconst notiflixParams = {\n  position: 'center-center',\n  timeout: 3000,\n  width: '400px',\n  fontSize: '20px',\n};\n\nexport function infoEmptyMessage() {\n  Notiflix.Notify.info('Enter your request, please!', notiflixParams);\n}\n\nexport function errorMessage() {\n  Notiflix.Notify.failure(\n    'Sorry, there are no images matching your search query. Please try again.',\n    notiflixParams\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '1a58fcece4729e6d5135f76aceb40c92';\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMoviesApi = async () => {\n  const { data } = await axios.get(`trending/movie/day`, params);\n  return data.results;\n};\n\nexport const fetchSearchMoviesApi = async movieName => {\n  const { data } = await axios.get(`/search/movie?query=${movieName}`, params);\n  return data.results;\n};\n\nexport const fetchMovieDetailsApi = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}`, params);\n  return data;\n};\n\nexport const fetchMovieCastApi = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits`, params);\n  return data.cast;\n};\n\nexport const fetchMovieReviewsApi = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`, params);\n  return data.results;\n};\n","export const defaultImg =\n  'https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg';\n"],"names":["MoviesGalleryList","styled","_templateObject","_taggedTemplateLiteral","MovieItem","_templateObject2","MovieLink","Link","_templateObject3","Img","_templateObject4","Text","_templateObject5","_ref","movies","location","useLocation","_jsx","children","map","_ref2","text","maxLength","id","title","poster_path","_jsxs","to","concat","state","from","src","length","defaultImg","alt","width","slice","Title","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","setMovies","useEffect","fetchTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","fetchTrendingMoviesApi","sent","t0","errorMessage","finish","stop","apply","arguments","_Fragment","Loader","MoviesList","notiflixParams","position","timeout","fontSize","infoEmptyMessage","Notiflix","axios","params","api_key","language","_yield$axios$get","abrupt","results","fetchSearchMoviesApi","_callee2","movieName","_yield$axios$get2","_context2","_x","fetchMovieDetailsApi","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","fetchMovieCastApi","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","fetchMovieReviewsApi","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}