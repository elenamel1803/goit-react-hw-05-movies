{"version":3,"file":"static/js/247.e4a2c01a.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","services/RequestApi.js"],"sourcesContent":["import Loader from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCastApi } from 'services/RequestApi';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        setIsLoading(true);\n        if (!movieId) return;\n        const data = await fetchMovieCastApi(movieId);\n        console.log('data :>> ', data);\n        setActors(data);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieCast();\n  }, [movieId]);\n\n  const actorList = actors\n    ? actors.map(({ name, character, profile_path, id }) => (\n        <li key={id}>\n          <img\n            src={`https://image.tmdb.org/t/p/w300${profile_path}`}\n            alt={name}\n            width=\"100\"\n          />\n          <p>{name}</p>\n          <p>Character: {character}</p>\n        </li>\n      ))\n    : 'No cast available';\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <ul>{actorList}</ul>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '1a58fcece4729e6d5135f76aceb40c92';\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMoviesApi = async () => {\n  const { data } = await axios.get(`trending/movie/day`, params);\n  return data.results;\n};\n\nexport const fetchSearchMoviesApi = async movieName => {\n  const { data } = await axios.get(`/search/movie?query=${movieName}`, params);\n  return data.results;\n};\n\nexport const fetchMovieDetailsApi = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}`, params);\n  return data;\n};\n\nexport const fetchMovieCastApi = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits`, params);\n  return data.cast;\n};\n\nexport const fetchMovieReviewsApi = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`, params);\n  return data.results;\n};\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","actors","setActors","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchMovieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","abrupt","fetchMovieCastApi","sent","console","log","t0","error","finish","stop","apply","arguments","actorList","map","_ref2","name","character","profile_path","id","_jsxs","children","_jsx","src","concat","alt","width","_Fragment","Loader","axios","params","api_key","language","fetchTrendingMoviesApi","_yield$axios$get","results","fetchSearchMoviesApi","_callee2","movieName","_yield$axios$get2","_context2","_x","fetchMovieDetailsApi","_ref3","_callee3","_yield$axios$get3","_context3","_x2","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","fetchMovieReviewsApi","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}