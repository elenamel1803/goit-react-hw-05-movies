{"version":3,"file":"static/js/278.e48e0f00.chunk.js","mappings":"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","sources":["pages/Movies/Movies.jsx","services/RequestApi.js"],"sourcesContent":["import Loader from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchSearchMoviesApi } from 'services/RequestApi';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const location = useLocation();\n\n  const movieName = searchParams.get('movieName') ?? '';\n\n  const updateQueryString = ({ target }) => {\n    const searchValue = target.value;\n    if (searchValue === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ movieName: searchValue });\n  };\n\n  // const handleChange = ({ target }) => setSearchParams(target.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams('movieName');\n  };\n\n  useEffect(() => {\n    const fetchSearchMovies = async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchSearchMoviesApi(movieName);\n        // if (!data.length) return;\n        console.log('data :>> ', data);\n        setMovies(data);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchSearchMovies();\n  }, [movieName]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          value={movieName}\n          onChange={updateQueryString}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {movies.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '1a58fcece4729e6d5135f76aceb40c92';\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMoviesApi = async () => {\n  const { data } = await axios.get(`trending/movie/day`, params);\n  return data.results;\n};\n\nexport const fetchSearchMoviesApi = async movieName => {\n  const { data } = await axios.get(`/search/movie?query=${movieName}`, params);\n  return data.results;\n};\n\nexport const fetchMovieDetailsApi = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}`, params);\n  return data;\n};\n\nexport const fetchMovieCastApi = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits`, params);\n  return data.cast;\n};\n\nexport const fetchMovieReviewsApi = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`, params);\n  return data.results;\n};\n"],"names":["_searchParams$get","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","location","useLocation","movieName","get","useEffect","fetchSearchMovies","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","fetchSearchMoviesApi","sent","console","log","t0","error","finish","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","Loader","onSubmit","e","preventDefault","type","autoComplete","autoFocus","placeholder","value","onChange","_ref","searchValue","target","map","_ref3","id","title","Link","to","concat","state","from","axios","params","api_key","language","fetchTrendingMoviesApi","_yield$axios$get","abrupt","results","_callee2","_yield$axios$get2","_context2","_x","fetchMovieDetailsApi","_callee3","movieId","_yield$axios$get3","_context3","_x2","fetchMovieCastApi","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","fetchMovieReviewsApi","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}