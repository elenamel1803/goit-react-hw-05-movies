{"version":3,"file":"static/js/736.b254acb7.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/Notiflix.js","services/RequestApi.js","services/defaultImg.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  padding: 24px;\n  justify-content: space-between;\n  margin: 0 auto;\n  border-radius: 4px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const CastItem = styled.li`\n  border-radius: 4px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  height: 290px;\n  width: 100px;\n`;\nexport const Img = styled.img`\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n  max-width: 100px;\n  min-height: 150px;\n  object-fit: cover;\n  object-position: center;\n`;\n\nexport const TextName = styled.p`\n  padding: 4px;\n  font-weight: bold;\n  text-align: center;\n`;\n\nexport const TextCharacter = styled.p`\n  padding: 4px;\n  text-align: center;\n`;\n\nexport const Text = styled.p`\n  padding: 4px;\n  text-align: center;\n  font-size: 18px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCastApi } from 'services/RequestApi';\nimport Loader from 'components/Loader/Loader';\nimport { errorMessage } from 'services/Notiflix';\nimport { defaultImg } from 'services/defaultImg';\nimport {\n  CastItem,\n  CastList,\n  Img,\n  Text,\n  TextCharacter,\n  TextName,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchMovieCast = async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchMovieCastApi(movieId);\n        setActors(data);\n      } catch (error) {\n        errorMessage(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieCast();\n  }, [movieId]);\n\n  const truncateText = (text, maxLength) => {\n    return text.length > maxLength ? text.slice(0, maxLength) + '...' : text;\n  };\n\n  const actorsItem = actors.map(({ name, character, profile_path, id }) => (\n    <CastItem key={id}>\n      <Img\n        src={\n          profile_path && profile_path.length > 0\n            ? `https://image.tmdb.org/t/p/w500${profile_path}`\n            : defaultImg\n        }\n        alt={name}\n        width=\"100\"\n      />\n      <TextName>{name}</TextName>\n      <TextCharacter>Character: {truncateText(character, 20)}</TextCharacter>\n    </CastItem>\n  ));\n\n  const actorList =\n    actors && actors.length > 0 ? (\n      <CastList>{actorsItem}</CastList>\n    ) : (\n      <Text>There is no cast for this movie</Text>\n    );\n\n  return <>{(isLoading && <Loader />) || actorList}</>;\n};\n\nexport default Cast;\n","import Notiflix from 'notiflix';\n\nconst notiflixParams = {\n  position: 'center-center',\n  timeout: 3000,\n  width: '400px',\n  fontSize: '20px',\n};\n\nexport function infoEmptyMessage() {\n  Notiflix.Notify.info('Enter your request, please!', notiflixParams);\n}\n\nexport function errorMessage() {\n  Notiflix.Notify.failure(\n    'Sorry, there are no movies matching your search query. Please try again.',\n    notiflixParams\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '1a58fcece4729e6d5135f76aceb40c92';\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMoviesApi = async () => {\n  const { data } = await axios.get(`trending/movie/day`, params);\n  return data.results;\n};\n\nexport const fetchSearchMoviesApi = async movieName => {\n  const { data } = await axios.get(`/search/movie?query=${movieName}`, params);\n  return data.results;\n};\n\nexport const fetchMovieDetailsApi = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}`, params);\n  return data;\n};\n\nexport const fetchMovieCastApi = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits`, params);\n  return data.cast;\n};\n\nexport const fetchMovieReviewsApi = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`, params);\n  return data.results;\n};\n","export const defaultImg =\n  'https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg';\n"],"names":["CastList","styled","_templateObject","_taggedTemplateLiteral","CastItem","_templateObject2","Img","_templateObject3","TextName","_templateObject4","TextCharacter","_templateObject5","Text","_templateObject6","movieId","useParams","_useState","useState","_useState2","_slicedToArray","actors","setActors","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchMovieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","fetchMovieCastApi","sent","t0","errorMessage","finish","stop","apply","arguments","actorsItem","map","_ref2","text","maxLength","name","character","profile_path","id","_jsxs","children","_jsx","src","length","concat","defaultImg","alt","width","slice","actorList","_Fragment","Loader","notiflixParams","position","timeout","fontSize","infoEmptyMessage","Notiflix","axios","params","api_key","language","fetchTrendingMoviesApi","_yield$axios$get","abrupt","results","fetchSearchMoviesApi","_callee2","movieName","_yield$axios$get2","_context2","_x","fetchMovieDetailsApi","_ref3","_callee3","_yield$axios$get3","_context3","_x2","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","fetchMovieReviewsApi","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}