{"version":3,"file":"static/js/387.c2ecbb34.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/Notiflix.js","services/RequestApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  padding: 24px;\n  margin: 0;\n  border-radius: 4px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const TextAuthor = styled.p`\n  padding: 4px;\n  font-weight: bold;\n  text-align: center;\n  font-size: 18px;\n`;\n\nexport const TextContent = styled.p`\n  padding: 4px;\n  font-weight: normal;\n  text-align: justify;\n  font-size: 18px;\n`;\n\nexport const Text = styled.p`\n  padding: 4px;\n  text-align: center;\n  font-size: 18px;\n`;\n","import Loader from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviewsApi } from 'services/RequestApi';\nimport { errorMessage } from 'services/Notiflix';\nimport { ReviewsList, Text, TextAuthor, TextContent } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [criticReviews, setCriticReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchMovieReviews = async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchMovieReviewsApi(movieId);\n        setCriticReviews(data);\n      } catch (error) {\n        errorMessage(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieReviews();\n  }, [movieId]);\n\n  const reviewsList =\n    criticReviews && criticReviews.length > 0 ? (\n      <ReviewsList>\n        {criticReviews.map(({ author, content, id }) => (\n          <li key={id}>\n            <TextAuthor>Author: {author}</TextAuthor>\n            <TextContent>{content}</TextContent>\n          </li>\n        ))}\n      </ReviewsList>\n    ) : (\n      <Text>There is no reviews for this movie</Text>\n    );\n\n  return <>{(isLoading && <Loader />) || reviewsList}</>;\n};\n\nexport default Reviews;\n","import Notiflix from 'notiflix';\n\nconst notiflixParams = {\n  position: 'center-center',\n  timeout: 3000,\n  width: '400px',\n  fontSize: '20px',\n};\n\nexport function infoEmptyMessage() {\n  Notiflix.Notify.info('Enter your request, please!', notiflixParams);\n}\n\nexport function errorMessage() {\n  Notiflix.Notify.failure(\n    'Sorry, there are no images matching your search query. Please try again.',\n    notiflixParams\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '1a58fcece4729e6d5135f76aceb40c92';\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMoviesApi = async () => {\n  const { data } = await axios.get(`trending/movie/day`, params);\n  return data.results;\n};\n\nexport const fetchSearchMoviesApi = async movieName => {\n  const { data } = await axios.get(`/search/movie?query=${movieName}`, params);\n  return data.results;\n};\n\nexport const fetchMovieDetailsApi = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}`, params);\n  return data;\n};\n\nexport const fetchMovieCastApi = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits`, params);\n  return data.cast;\n};\n\nexport const fetchMovieReviewsApi = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`, params);\n  return data.results;\n};\n"],"names":["ReviewsList","styled","_templateObject","_taggedTemplateLiteral","TextAuthor","_templateObject2","TextContent","_templateObject3","Text","_templateObject4","movieId","useParams","_useState","useState","_useState2","_slicedToArray","criticReviews","setCriticReviews","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchMovieReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","fetchMovieReviewsApi","sent","t0","errorMessage","finish","stop","apply","arguments","reviewsList","length","_jsx","children","map","_ref2","author","content","id","_jsxs","_Fragment","Loader","notiflixParams","position","timeout","width","fontSize","infoEmptyMessage","Notiflix","axios","params","api_key","language","fetchTrendingMoviesApi","_yield$axios$get","abrupt","results","fetchSearchMoviesApi","_callee2","movieName","_yield$axios$get2","_context2","concat","_x","fetchMovieDetailsApi","_ref3","_callee3","_yield$axios$get3","_context3","_x2","fetchMovieCastApi","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}