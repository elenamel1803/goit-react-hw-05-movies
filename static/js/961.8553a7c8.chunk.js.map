{"version":3,"file":"static/js/961.8553a7c8.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.jsx","services/RequestApi.js"],"sourcesContent":["import Loader from 'components/Loader/Loader';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieDetailsApi } from 'services/RequestApi';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  console.log('movieId :>> ', movieId);\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        setIsLoading(true);\n        if (!movieId) return;\n        const data = await fetchMovieDetailsApi(movieId);\n        console.log('data :>> ', data);\n        setMovie(data);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n\n  const { title, overview, genres, poster_path, vote_average } = movie;\n\n  const genresList = genres\n    ? genres.map(genre => genre.name).join(', ')\n    : 'No genres available';\n\n  const popularity = Math.round(vote_average * 10);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <Link to={backLink.current}>Go back</Link>\n      <div>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : defaultImg\n          }\n          alt={title}\n          width=\"300\"\n        />\n\n        <h1>{title}</h1>\n        <p>User Score: {popularity}%</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h2>Genres</h2>\n        <p>{genresList}</p>\n      </div>\n\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '1a58fcece4729e6d5135f76aceb40c92';\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMoviesApi = async () => {\n  const { data } = await axios.get(`trending/movie/day`, params);\n  return data.results;\n};\n\nexport const fetchSearchMoviesApi = async movieName => {\n  const { data } = await axios.get(`/search/movie?query=${movieName}`, params);\n  return data.results;\n};\n\nexport const fetchMovieDetailsApi = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}`, params);\n  return data;\n};\n\nexport const fetchMovieCastApi = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits`, params);\n  return data.cast;\n};\n\nexport const fetchMovieReviewsApi = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`, params);\n  return data.results;\n};\n"],"names":["_location$state$from","_location$state","movieId","useParams","console","log","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","isLoading","setIsLoading","location","useLocation","backLink","useRef","state","from","useEffect","fetchMovieDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","abrupt","fetchMovieDetailsApi","sent","t0","error","finish","stop","apply","arguments","title","overview","genres","poster_path","vote_average","genresList","map","genre","name","join","popularity","Math","round","_jsxs","_Fragment","children","_jsx","Loader","Link","to","current","src","concat","alt","width","Suspense","fallback","Outlet","axios","params","api_key","language","fetchTrendingMoviesApi","_yield$axios$get","results","fetchSearchMoviesApi","_ref2","_callee2","movieName","_yield$axios$get2","_context2","_x","_ref3","_callee3","_yield$axios$get3","_context3","_x2","fetchMovieCastApi","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","fetchMovieReviewsApi","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}